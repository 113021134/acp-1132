# -*- coding: utf-8 -*-
"""Untitled26.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12cHnlHGw3gTrqJhEy0-2o7SsiimRoWos
"""

!pip install scrapy

import requests
import xml.etree.ElementTree as ET
from google.colab import files

# Use your GitHub username here
username = '113021135'

# Optional: If you have a token, you can increase your rate limit
# token = 'your_personal_access_token'
# headers = {'Authorization': f'token {token}'}
headers = {}

# GitHub API URL for public repositories of a user
url = f'https://api.github.com/users/113021135/repos'

response = requests.get(url, headers=headers)

if response.status_code == 200:
    repos = response.json()
    root = ET.Element('repositories')

    for repo in repos:
        repo_elem = ET.SubElement(root, 'repository')

        # Repo URL
        url_elem = ET.SubElement(repo_elem, 'URL')
        url_elem.text = repo.get('html_url', '')

        # Repo Description
        about_elem = ET.SubElement(repo_elem, 'About')
        about_elem.text = repo.get('description') or ''

        # Last Updated
        updated_elem = ET.SubElement(repo_elem, 'Last_Updated')
        updated_elem.text = repo.get('updated_at', '')

        # Languages
        languages_url = repo.get('languages_url')
        languages_elem = ET.SubElement(repo_elem, 'Languages')
        if languages_url:
            lang_response = requests.get(languages_url, headers=headers)
            if lang_response.status_code == 200:
                for lang in lang_response.json():
                    lang_elem = ET.SubElement(languages_elem, 'Language')
                    lang_elem.text = lang

        # Commits (estimate using 'commits_url' with /commits endpoint)
        commits_url = repo.get('commits_url', '').replace('{/sha}', '')
        commits_elem = ET.SubElement(repo_elem, 'Number_of_Commits')
        commit_response = requests.get(commits_url, headers=headers)
        if commit_response.status_code == 200:
            commits = commit_response.json()
            commits_elem.text = str(len(commits))  # Approximate count
        else:
            commits_elem.text = '0'

    # Save XML file
    tree = ET.ElementTree(root)
    tree.write('repos.xml', encoding='utf-8', xml_declaration=True)

    # Download
    files.download('repos.xml')